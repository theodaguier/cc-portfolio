import {
  require_react
} from "./chunk-42CJYN7C.js";
import {
  __toESM
} from "./chunk-J43GMYXM.js";

// node_modules/beautiful-react-hooks/esm/useMediaQuery.js
var import_react = __toESM(require_react());

// node_modules/beautiful-react-hooks/esm/shared/isClient.js
var isClient = !!(typeof window !== "undefined" && window.document && window.document.createElement);
var isClient_default = isClient;

// node_modules/beautiful-react-hooks/esm/shared/isAPISupported.js
var isApiSupported = (api) => typeof window !== "undefined" ? api in window : false;
var isAPISupported_default = isApiSupported;

// node_modules/beautiful-react-hooks/esm/shared/warnOnce.js
var cache = /* @__PURE__ */ new Map();
var warnOnce = (message) => {
  if (cache.has(message))
    return;
  cache.set(message, true);
  console.warn(message);
};
var warnOnce_default = warnOnce;

// node_modules/beautiful-react-hooks/esm/useMediaQuery.js
var errorMessage = "matchMedia is not supported, this could happen both because window.matchMedia is not supported by your current browser or you're using the useMediaQuery hook whilst server side rendering.";
var useMediaQuery = (mediaQuery) => {
  if (!isClient_default || !isAPISupported_default("matchMedia")) {
    warnOnce_default(errorMessage);
    return false;
  }
  const [isVerified, setIsVerified] = (0, import_react.useState)(!!window.matchMedia(mediaQuery).matches);
  (0, import_react.useEffect)(() => {
    const mediaQueryList = window.matchMedia(mediaQuery);
    const documentChangeHandler = () => {
      setIsVerified(!!mediaQueryList.matches);
    };
    try {
      mediaQueryList.addEventListener("change", documentChangeHandler);
    } catch (e) {
      mediaQueryList.addListener(documentChangeHandler);
    }
    documentChangeHandler();
    return () => {
      try {
        mediaQueryList.removeEventListener("change", documentChangeHandler);
      } catch (e) {
        mediaQueryList.removeListener(documentChangeHandler);
      }
    };
  }, [mediaQuery]);
  return isVerified;
};
var useMediaQuery_default = useMediaQuery;
export {
  useMediaQuery_default as default
};
//# sourceMappingURL=beautiful-react-hooks_useMediaQuery.js.map
