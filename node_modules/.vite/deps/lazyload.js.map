{
  "version": 3,
  "sources": ["../../lazyload/lazyload.js"],
  "sourcesContent": ["/*!\n * Lazy Load - JavaScript plugin for lazy loading images\n *\n * Copyright (c) 2007-2019 Mika Tuupola\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * Project home:\n *   https://appelsiini.net/projects/lazyload\n *\n * Version: 2.0.0-rc.2\n *\n */\n\n(function (root, factory) {\n    if (typeof exports === \"object\") {\n        module.exports = factory(root);\n    } else if (typeof define === \"function\" && define.amd) {\n        define([], factory);\n    } else {\n        root.LazyLoad = factory(root);\n    }\n}) (typeof global !== \"undefined\" ? global : this.window || this.global, function (root) {\n\n    \"use strict\";\n\n    if (typeof define === \"function\" && define.amd){\n        root = window;\n    }\n\n    const defaults = {\n        src: \"data-src\",\n        srcset: \"data-srcset\",\n        selector: \".lazyload\",\n        root: null,\n        rootMargin: \"0px\",\n        threshold: 0\n    };\n\n    /**\n    * Merge two or more objects. Returns a new object.\n    * @private\n    * @param {Boolean}  deep     If true, do a deep (or recursive) merge [optional]\n    * @param {Object}   objects  The objects to merge together\n    * @returns {Object}          Merged values of defaults and options\n    */\n    const extend = function ()  {\n\n        let extended = {};\n        let deep = false;\n        let i = 0;\n        let length = arguments.length;\n\n        /* Check if a deep merge */\n        if (Object.prototype.toString.call(arguments[0]) === \"[object Boolean]\") {\n            deep = arguments[0];\n            i++;\n        }\n\n        /* Merge the object into the extended object */\n        let merge = function (obj) {\n            for (let prop in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n                    /* If deep merge and property is an object, merge properties */\n                    if (deep && Object.prototype.toString.call(obj[prop]) === \"[object Object]\") {\n                        extended[prop] = extend(true, extended[prop], obj[prop]);\n                    } else {\n                        extended[prop] = obj[prop];\n                    }\n                }\n            }\n        };\n\n        /* Loop through each object and conduct a merge */\n        for (; i < length; i++) {\n            let obj = arguments[i];\n            merge(obj);\n        }\n\n        return extended;\n    };\n\n    function LazyLoad(images, options) {\n        this.settings = extend(defaults, options || {});\n        this.images = images || document.querySelectorAll(this.settings.selector);\n        this.observer = null;\n        this.init();\n    }\n\n    LazyLoad.prototype = {\n        init: function() {\n\n            /* Without observers load everything and bail out early. */\n            if (!root.IntersectionObserver) {\n                this.loadImages();\n                return;\n            }\n\n            let self = this;\n            let observerConfig = {\n                root: this.settings.root,\n                rootMargin: this.settings.rootMargin,\n                threshold: [this.settings.threshold]\n            };\n\n            this.observer = new IntersectionObserver(function(entries) {\n                Array.prototype.forEach.call(entries, function (entry) {\n                    if (entry.isIntersecting) {\n                        self.observer.unobserve(entry.target);\n                        let src = entry.target.getAttribute(self.settings.src);\n                        let srcset = entry.target.getAttribute(self.settings.srcset);\n                        if (\"img\" === entry.target.tagName.toLowerCase()) {\n                            if (src) {\n                                entry.target.src = src;\n                            }\n                            if (srcset) {\n                                entry.target.srcset = srcset;\n                            }\n                        } else {\n                            entry.target.style.backgroundImage = \"url(\" + src + \")\";\n                        }\n                    }\n                });\n            }, observerConfig);\n\n            Array.prototype.forEach.call(this.images, function (image) {\n                self.observer.observe(image);\n            });\n        },\n\n        loadAndDestroy: function () {\n            if (!this.settings) { return; }\n            this.loadImages();\n            this.destroy();\n        },\n\n        loadImages: function () {\n            if (!this.settings) { return; }\n\n            let self = this;\n            Array.prototype.forEach.call(this.images, function (image) {\n                let src = image.getAttribute(self.settings.src);\n                let srcset = image.getAttribute(self.settings.srcset);\n                if (\"img\" === image.tagName.toLowerCase()) {\n                    if (src) {\n                        image.src = src;\n                    }\n                    if (srcset) {\n                        image.srcset = srcset;\n                    }\n                } else {\n                    image.style.backgroundImage = \"url('\" + src + \"')\";\n                }\n            });\n        },\n\n        destroy: function () {\n            if (!this.settings) { return; }\n            this.observer.disconnect();\n            this.settings = null;\n        }\n    };\n\n    root.lazyload = function(images, options) {\n        return new LazyLoad(images, options);\n    };\n\n    if (root.jQuery) {\n        const $ = root.jQuery;\n        $.fn.lazyload = function (options) {\n            options = options || {};\n            options.attribute = options.attribute || \"data-src\";\n            new LazyLoad($.makeArray(this), options);\n            return this;\n        };\n    }\n\n    return LazyLoad;\n});\n"],
  "mappings": "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",
  "names": []
}
